stages:
  - "check"

lint:
  stage: "check"
  needs: []
  tags:
    - "linux"
  image: "demurgos/node:2021.1"
  variables:
    CARGO_HOME: ".cargo"
    RUSTFLAGS: "-C target-feature=-crt-static"
  before_script:
    - "node --version"
    - "yarn --version"
    - "rustc --version"
    - "cargo --version"
    - "cargo fmt --version"
    - "cargo clippy --version"
    - "export SCCACHE_DIR=\"$(pwd)/.cache/sccache\""
    - "export RUSTC_WRAPPER=sccache"
    - "yarn install --immutable"
  script:
    - |
      cargo fmt -- --check \
      && cargo clippy --all-targets --all-features -- -D warnings \
      && yarn run lint
  after_script: []
  cache:
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "Cargo.lock"
      paths:
        - ".cache/sccache/"
        - ".cargo/bin/"
        - ".cargo/registry/cache/"
        - ".cargo/registry/index/"
        - ".cargo/git/db/"
        - "target/"
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "yarn.lock"
      paths:
        - ".yarn/cache/"

test-ruby2:
  stage: "check"
  needs: []
  tags:
    - "linux"
  # ruby:2.7.2-buster
  image: "ruby@sha256:19cfb36f6e63fa964c984bd7837d7e2ba18263e34a5da1725324b80271dd475a"
  before_script:
    - "ruby --version"
    - "bundler --version"
    - "cd clients/ruby"
    - "bundle install"
  script:
    - "bundle exec rubocop"
    - "bundle exec rspec"
    - "bundle exec srb tc"
  after_script: []

test-ruby3:
  stage: "check"
  needs: []
  tags:
    - "linux"
  # ruby:3.0.1-buster
  image: "ruby@sha256:d5c828809239010c8549eeaf1f6da84f67bee7f61353e6a4a52159bf3f397aa6"
  before_script:
    - "ruby --version"
    - "bundler --version"
    - "cd clients/ruby"
    - "bundle install"
  script:
    - "bundle exec rubocop"
    - "bundle exec rspec"
    - "bundle exec srb tc"
  after_script: []

test-jvm16:
  stage: "check"
  needs: []
  tags:
    - "linux"
  # openjdk:16.0.1-slim-buster
  image: "openjdk@sha256:77a90136a7a3bd2342adc2a4e10815a5bd71598fa2c8b5906c284dfd24e10ccc"
  before_script:
    - "cd clients/kotlin"
  script:
    # GRADLE_OPTS="-Dorg.gradle.daemon=false" ./gradlew test
    - "./gradlew test --no-daemon"
  after_script: []

test-rust:
  stage: "check"
  needs: []
  tags:
    - "linux"
  image: "demurgos/node:2021.1"
  services:
    - "postgres:latest"
  variables:
    CARGO_HOME: ".cargo"
    POSTGRES_DB: "etwin"
    POSTGRES_USER: "etwin.dev"
    POSTGRES_PASSWORD: "dev"
    RUSTFLAGS: "-C target-feature=-crt-static"
  before_script:
    - "node --version"
    - "yarn --version"
    - "rustc --version"
    - "cargo --version"
    - "cargo fmt --version"
    - "cargo clippy --version"
    - "export SCCACHE_DIR=\"$(pwd)/.cache/sccache\""
    - "export RUSTC_WRAPPER=sccache"
    - "yarn install --immutable"
    - |
      cat >etwin.toml <<EOL
      [etwin]
      api = "postgres"
      secret = "dev_secret"
      http_port = 50320
      external_uri = "http://localhost:50320"

      [db]
      host = "postgres"
      port = 5432
      name = "${POSTGRES_DB}"
      admin_user = "${POSTGRES_USER}"
      admin_password = "${POSTGRES_PASSWORD}"
      user = "${POSTGRES_USER}"
      password = "${POSTGRES_PASSWORD}"

      [clients.eternalfest]
      display_name = "Eternalfest"
      app_uri = "http://localhost:50313"
      callback_uri = "http://localhost:50313/oauth/callback"
      secret = "eternalfest_secret"

      [auth.twinoid]
      client_id = "380"
      secret = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

      [forum]
      posts_per_page = 10
      threads_per_page = 20

      [forum.sections.fr_main]
      display_name = "Forum Général"
      locale = "fr-FR"
      EOL
  script:
    - |
      sccache --start-server \
      && cargo test --no-fail-fast -- -Z unstable-options --report-time \
      && sccache --stop-server
  after_script: []
  cache:
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "Cargo.lock"
      paths:
        - ".cache/sccache/"
        - ".cargo/bin/"
        - ".cargo/registry/cache/"
        - ".cargo/registry/index/"
        - ".cargo/git/db/"
        - "target/"
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "yarn.lock"
      paths:
        - ".yarn/cache/"

test-php:
  stage: "check"
  needs: []
  tags:
    - "linux"
  # php:8.0.12-cli-alpine3.13
  image: "php@sha256:2f6f432099d60a17b5f9ca0546b7909a36a16bf51e00c12f36e20c35d07d906f"
  before_script:
    - "apk add --no-cache composer"
    - "php --version"
    - "composer --version"
    - "cd clients/php"
    - "composer install"
  script:
    - "composer test"
  after_script: []

test-node:
  stage: "check"
  needs: []
  tags:
    - "linux"
  image: "demurgos/node:2021.1"
  services:
    - "postgres:latest"
  variables:
    CARGO_HOME: ".cargo"
    POSTGRES_DB: "etwin"
    POSTGRES_USER: "etwin.dev"
    POSTGRES_PASSWORD: "dev"
    RUSTFLAGS: "-C target-feature=-crt-static"
  before_script:
    - "node --version"
    - "yarn --version"
    - "rustc --version"
    - "cargo --version"
    - "cargo fmt --version"
    - "cargo clippy --version"
    - "export SCCACHE_DIR=\"$(pwd)/.cache/sccache\""
    - "export RUSTC_WRAPPER=sccache"
    - "yarn install --immutable"
    - |
      cat >etwin.toml <<EOL
      [etwin]
      api = "postgres"
      secret = "dev_secret"
      http_port = 50320
      external_uri = "http://localhost:50320"

      [db]
      host = "postgres"
      port = 5432
      name = "${POSTGRES_DB}"
      admin_user = "${POSTGRES_USER}"
      admin_password = "${POSTGRES_PASSWORD}"
      user = "${POSTGRES_USER}"
      password = "${POSTGRES_PASSWORD}"

      [clients.eternalfest]
      display_name = "Eternalfest"
      app_uri = "http://localhost:50313"
      callback_uri = "http://localhost:50313/oauth/callback"
      secret = "eternalfest_secret"

      [auth.twinoid]
      client_id = "380"
      secret = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

      [forum]
      posts_per_page = 10
      threads_per_page = 20

      [forum.sections.fr_main]
      display_name = "Forum Général"
      locale = "fr-FR"
      EOL
  script:
    - |
      sccache --start-server \
      && yarn run test \
      && sccache --stop-server
  after_script: []
  cache:
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "Cargo.lock"
      paths:
        - ".cache/sccache/"
        - ".cargo/bin/"
        - ".cargo/registry/cache/"
        - ".cargo/registry/index/"
        - ".cargo/git/db/"
        - "target/"
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "yarn.lock"
      paths:
        - ".yarn/cache/"

build:
  stage: "check"
  needs: []
  tags:
    - "linux"
  image: "demurgos/node:2021.1"
  variables:
    CARGO_HOME: ".cargo"
    RUSTFLAGS: "-C target-feature=-crt-static"
  before_script:
    - "node --version"
    - "yarn --version"
    - "rustc --version"
    - "cargo --version"
    - "cargo fmt --version"
    - "cargo clippy --version"
    - "export SCCACHE_DIR=\"$(pwd)/.cache/sccache\""
    - "export RUSTC_WRAPPER=sccache"
    - "yarn install --immutable"
  script:
    - |
      sccache --start-server \
      && yarn --cwd packages/rest-server run main:build \
      && yarn --cwd packages/website run build \
      && yarn --cwd packages/cli run script:build \
      && sccache --stop-server
  after_script: []
  cache:
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "Cargo.lock"
      paths:
        - ".cache/sccache/"
        - ".cargo/bin/"
        - ".cargo/registry/cache/"
        - ".cargo/registry/index/"
        - ".cargo/git/db/"
        - "target/"
    - key:
        prefix: "$CI_JOB_NAME"
        files:
          - "yarn.lock"
      paths:
        - ".yarn/cache/"
